
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  password: 'password',
  image: 'image',
  address: 'address',
  phone: 'phone',
  otpCode: 'otpCode',
  otpExpires: 'otpExpires',
  resetToken: 'resetToken',
  resetTokenExpires: 'resetTokenExpires',
  isVerified: 'isVerified',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DonationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  amount: 'amount',
  status: 'status',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookScalarFieldEnum = {
  id: 'id',
  name: 'name',
  author: 'author',
  fileName: 'fileName',
  filePath: 'filePath',
  fileSize: 'fileSize',
  price: 'price',
  description: 'description',
  coverImage: 'coverImage',
  uploadDate: 'uploadDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookCouponScalarFieldEnum = {
  id: 'id',
  code: 'code',
  discount: 'discount',
  type: 'type',
  description: 'description',
  active: 'active',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookOrderScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  totalAmount: 'totalAmount',
  discountAmount: 'discountAmount',
  finalAmount: 'finalAmount',
  couponId: 'couponId',
  paymentId: 'paymentId',
  orderId: 'orderId',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BookOrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  bookId: 'bookId',
  price: 'price'
};

exports.Prisma.BookPurchaseScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  bookId: 'bookId',
  orderId: 'orderId',
  purchaseDate: 'purchaseDate',
  accessGranted: 'accessGranted'
};

exports.Prisma.PaymentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  referenceId: 'referenceId',
  provider: 'provider',
  amount: 'amount',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.NewsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  titleEn: 'titleEn',
  slug: 'slug',
  excerpt: 'excerpt',
  image: 'image',
  category: 'category',
  date: 'date',
  readTime: 'readTime',
  views: 'views',
  featured: 'featured',
  content: 'content',
  tags: 'tags',
  author: 'author',
  authorId: 'authorId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GopalPariwarScalarFieldEnum = {
  id: 'id',
  heroImage: 'heroImage',
  heroTitle: 'heroTitle',
  heroSubtitle: 'heroSubtitle',
  personalInfo: 'personalInfo',
  spiritualEducation: 'spiritualEducation',
  lifeJourney: 'lifeJourney',
  responsibilities: 'responsibilities',
  pledges: 'pledges',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.GaushalaScalarFieldEnum = {
  id: 'id',
  name: 'name',
  photo: 'photo',
  address: 'address',
  establishmentYear: 'establishmentYear',
  contactDetails: 'contactDetails',
  totalCows: 'totalCows',
  capacity: 'capacity',
  description: 'description',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  contactPerson: 'contactPerson',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CardScalarFieldEnum = {
  id: 'id',
  title: 'title',
  titleEn: 'titleEn',
  link: 'link',
  image: 'image',
  order: 'order',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DtaSanssthanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  person: 'person',
  image: 'image',
  description: 'description',
  email: 'email',
  phone: 'phone',
  altPhone: 'altPhone',
  website: 'website',
  timing: 'timing',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PrivacyPolicyScalarFieldEnum = {
  id: 'id',
  title: 'title',
  subtitle: 'subtitle',
  sections: 'sections',
  email: 'email',
  phone: 'phone',
  callingHours: 'callingHours',
  mailingAddress: 'mailingAddress',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TermsConditionsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  subtitle: 'subtitle',
  sections: 'sections',
  email: 'email',
  phone: 'phone',
  callingHours: 'callingHours',
  mailingAddress: 'mailingAddress',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BannerScalarFieldEnum = {
  id: 'id',
  title: 'title',
  image: 'image',
  active: 'active',
  order: 'order',
  publicId: 'publicId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  info: 'info',
  createdAt: 'createdAt'
};

exports.Prisma.FoundationScalarFieldEnum = {
  id: 'id',
  name: 'name',
  tagline: 'tagline',
  logoUrl: 'logoUrl',
  description: 'description',
  establishedYear: 'establishedYear',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  createdById: 'createdById',
  updatedById: 'updatedById'
};

exports.Prisma.FoundationStatScalarFieldEnum = {
  id: 'id',
  foundationId: 'foundationId',
  label: 'label',
  value: 'value',
  displayOrder: 'displayOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FoundationActivityScalarFieldEnum = {
  id: 'id',
  foundationId: 'foundationId',
  activityText: 'activityText',
  displayOrder: 'displayOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FoundationObjectiveScalarFieldEnum = {
  id: 'id',
  foundationId: 'foundationId',
  title: 'title',
  description: 'description',
  objectiveType: 'objectiveType',
  displayOrder: 'displayOrder',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FoundationContactScalarFieldEnum = {
  id: 'id',
  foundationId: 'foundationId',
  email: 'email',
  phone: 'phone',
  address: 'address',
  website: 'website',
  socialMediaLinks: 'socialMediaLinks',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FoundationMediaScalarFieldEnum = {
  id: 'id',
  foundationId: 'foundationId',
  fileName: 'fileName',
  filePath: 'filePath',
  fileType: 'fileType',
  fileSize: 'fileSize',
  mediaType: 'mediaType',
  altText: 'altText',
  createdAt: 'createdAt'
};

exports.Prisma.EventScalarFieldEnum = {
  id: 'id',
  title: 'title',
  startDate: 'startDate',
  endDate: 'endDate',
  time: 'time',
  location: 'location',
  duration: 'duration',
  color: 'color',
  liveLinks: 'liveLinks',
  description: 'description',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BhajanScalarFieldEnum = {
  id: 'id',
  name: 'name',
  artist: 'artist',
  album: 'album',
  duration: 'duration',
  imageUrl: 'imageUrl',
  audioUrl: 'audioUrl',
  audioPath: 'audioPath',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.UserOrderByRelevanceFieldEnum = {
  name: 'name',
  email: 'email',
  password: 'password',
  image: 'image',
  address: 'address',
  phone: 'phone',
  otpCode: 'otpCode',
  resetToken: 'resetToken',
  role: 'role'
};

exports.Prisma.DonationOrderByRelevanceFieldEnum = {
  status: 'status',
  paymentMethod: 'paymentMethod',
  transactionId: 'transactionId'
};

exports.Prisma.BookOrderByRelevanceFieldEnum = {
  name: 'name',
  author: 'author',
  fileName: 'fileName',
  filePath: 'filePath',
  fileSize: 'fileSize',
  description: 'description',
  coverImage: 'coverImage'
};

exports.Prisma.BookCouponOrderByRelevanceFieldEnum = {
  code: 'code',
  type: 'type',
  description: 'description'
};

exports.Prisma.BookOrderOrderByRelevanceFieldEnum = {
  paymentId: 'paymentId',
  orderId: 'orderId',
  status: 'status'
};

exports.Prisma.PaymentOrderByRelevanceFieldEnum = {
  referenceId: 'referenceId',
  provider: 'provider',
  status: 'status'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NewsOrderByRelevanceFieldEnum = {
  title: 'title',
  titleEn: 'titleEn',
  slug: 'slug',
  excerpt: 'excerpt',
  image: 'image',
  category: 'category',
  date: 'date',
  readTime: 'readTime',
  author: 'author'
};

exports.Prisma.GopalPariwarOrderByRelevanceFieldEnum = {
  heroImage: 'heroImage',
  heroTitle: 'heroTitle',
  heroSubtitle: 'heroSubtitle',
  spiritualEducation: 'spiritualEducation'
};

exports.Prisma.GaushalaOrderByRelevanceFieldEnum = {
  name: 'name',
  photo: 'photo',
  address: 'address',
  contactDetails: 'contactDetails',
  description: 'description',
  city: 'city',
  state: 'state',
  pincode: 'pincode',
  contactPerson: 'contactPerson'
};

exports.Prisma.CardOrderByRelevanceFieldEnum = {
  title: 'title',
  titleEn: 'titleEn',
  link: 'link',
  image: 'image'
};

exports.Prisma.DtaSanssthanOrderByRelevanceFieldEnum = {
  name: 'name',
  person: 'person',
  image: 'image',
  description: 'description',
  email: 'email',
  phone: 'phone',
  altPhone: 'altPhone',
  website: 'website',
  timing: 'timing'
};

exports.Prisma.PrivacyPolicyOrderByRelevanceFieldEnum = {
  title: 'title',
  subtitle: 'subtitle',
  email: 'email',
  phone: 'phone',
  callingHours: 'callingHours',
  mailingAddress: 'mailingAddress'
};

exports.Prisma.TermsConditionsOrderByRelevanceFieldEnum = {
  title: 'title',
  subtitle: 'subtitle',
  email: 'email',
  phone: 'phone',
  callingHours: 'callingHours',
  mailingAddress: 'mailingAddress'
};

exports.Prisma.BannerOrderByRelevanceFieldEnum = {
  title: 'title',
  image: 'image',
  publicId: 'publicId'
};

exports.Prisma.MessageOrderByRelevanceFieldEnum = {
  info: 'info'
};

exports.Prisma.FoundationOrderByRelevanceFieldEnum = {
  name: 'name',
  tagline: 'tagline',
  logoUrl: 'logoUrl',
  description: 'description',
  establishedYear: 'establishedYear'
};

exports.Prisma.FoundationStatOrderByRelevanceFieldEnum = {
  label: 'label',
  value: 'value'
};

exports.Prisma.FoundationActivityOrderByRelevanceFieldEnum = {
  activityText: 'activityText'
};

exports.Prisma.FoundationObjectiveOrderByRelevanceFieldEnum = {
  title: 'title',
  description: 'description'
};

exports.Prisma.FoundationContactOrderByRelevanceFieldEnum = {
  email: 'email',
  phone: 'phone',
  address: 'address',
  website: 'website'
};

exports.Prisma.FoundationMediaOrderByRelevanceFieldEnum = {
  fileName: 'fileName',
  filePath: 'filePath',
  fileType: 'fileType',
  altText: 'altText'
};

exports.Prisma.EventOrderByRelevanceFieldEnum = {
  title: 'title',
  time: 'time',
  location: 'location',
  duration: 'duration',
  color: 'color',
  description: 'description'
};

exports.Prisma.BhajanOrderByRelevanceFieldEnum = {
  id: 'id',
  name: 'name',
  artist: 'artist',
  album: 'album',
  duration: 'duration',
  imageUrl: 'imageUrl',
  audioUrl: 'audioUrl',
  audioPath: 'audioPath'
};
exports.ObjectiveType = exports.$Enums.ObjectiveType = {
  main: 'main',
  supportive: 'supportive'
};

exports.UserRole = exports.$Enums.UserRole = {
  super_admin: 'super_admin',
  admin: 'admin',
  editor: 'editor'
};

exports.MediaType = exports.$Enums.MediaType = {
  logo: 'logo',
  banner: 'banner',
  gallery: 'gallery',
  document: 'document'
};

exports.Prisma.ModelName = {
  User: 'User',
  Donation: 'Donation',
  Book: 'Book',
  BookCoupon: 'BookCoupon',
  BookOrder: 'BookOrder',
  BookOrderItem: 'BookOrderItem',
  BookPurchase: 'BookPurchase',
  Payment: 'Payment',
  News: 'News',
  GopalPariwar: 'GopalPariwar',
  Gaushala: 'Gaushala',
  Card: 'Card',
  DtaSanssthan: 'DtaSanssthan',
  PrivacyPolicy: 'PrivacyPolicy',
  TermsConditions: 'TermsConditions',
  Banner: 'Banner',
  Message: 'Message',
  Foundation: 'Foundation',
  FoundationStat: 'FoundationStat',
  FoundationActivity: 'FoundationActivity',
  FoundationObjective: 'FoundationObjective',
  FoundationContact: 'FoundationContact',
  FoundationMedia: 'FoundationMedia',
  Event: 'Event',
  Bhajan: 'Bhajan'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/shavandeb-kaiti/Dhenu-Mahima-Dev-Backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/shavandeb-kaiti/Dhenu-Mahima-Dev-Backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "mysql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"mysql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n//////////////////////////////\n// USERS & AUTHENTICATION\n//////////////////////////////\n\nmodel User {\n  id                Int       @id @default(autoincrement())\n  name              String\n  email             String    @unique\n  password          String?\n  image             String?\n  address           String?\n  phone             String?\n  otpCode           String?\n  otpExpires        DateTime?\n  resetToken        String?\n  resetTokenExpires DateTime?\n  isVerified        Boolean   @default(false)\n  role              String    @default(\"user\") // user | subadmin | admin\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n\n  bookOrders    BookOrder[]\n  bookPurchases BookPurchase[]\n  donations     Donation[]\n  payments      Payment[]\n}\n\n//////////////////////////////\n// DONATIONS\n//////////////////////////////\n\nmodel Donation {\n  id            Int      @id @default(autoincrement())\n  userId        Int\n  amount        Float\n  status        String   @default(\"pending\") // pending | success | failed\n  paymentMethod String? // phonepe | stripe | etc.\n  transactionId String   @unique\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id])\n}\n\n//////////////////////////////\n// PDF BOOKS & ORDERS\n//////////////////////////////\n\n// Book Model - Stores PDF book information\nmodel Book {\n  id          Int      @id @default(autoincrement())\n  name        String   @db.VarChar(255)\n  author      String   @db.VarChar(255)\n  fileName    String   @db.VarChar(255) // Stored PDF filename\n  filePath    String   @db.VarChar(500) // Server path to PDF\n  fileSize    String   @db.VarChar(50) // e.g., \"2.5 MB\"\n  price       Float    @db.Double\n  description String?  @db.Text\n  coverImage  String?  @db.VarChar(255) // Cover image filename\n  uploadDate  DateTime @default(now())\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  purchases  BookPurchase[]\n  orderItems BookOrderItem[]\n\n  @@index([name])\n  @@index([author])\n  @@map(\"books\")\n}\n\n// Coupon Model - Discount codes\nmodel BookCoupon {\n  id          Int      @id @default(autoincrement())\n  code        String   @unique @db.VarChar(50)\n  discount    Float    @db.Double\n  type        String   @db.VarChar(20) // \"PERCENTAGE\" or \"FIXED\"\n  description String?  @db.Text\n  active      Boolean  @default(true)\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  orders BookOrder[]\n\n  @@index([code])\n  @@index([active])\n  @@map(\"book_coupons\")\n}\n\n// Order Model - Payment orders\nmodel BookOrder {\n  id             Int      @id @default(autoincrement())\n  userId         Int\n  totalAmount    Float    @db.Double\n  discountAmount Float    @default(0) @db.Double\n  finalAmount    Float    @db.Double\n  couponId       Int?\n  paymentId      String?  @db.VarChar(255) // Razorpay payment ID\n  orderId        String?  @db.VarChar(255) // Razorpay order ID\n  status         String   @default(\"PENDING\") @db.VarChar(20) // PENDING | COMPLETED | FAILED | REFUNDED\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n\n  user      User            @relation(fields: [userId], references: [id], onDelete: Cascade)\n  coupon    BookCoupon?     @relation(fields: [couponId], references: [id], onDelete: SetNull)\n  items     BookOrderItem[]\n  purchases BookPurchase[]\n\n  @@index([userId])\n  @@index([status])\n  @@index([orderId])\n  @@map(\"book_orders\")\n}\n\n// Order Items - Books in each order\nmodel BookOrderItem {\n  id      Int   @id @default(autoincrement())\n  orderId Int\n  bookId  Int\n  price   Float @db.Double\n\n  order BookOrder @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  book  Book      @relation(fields: [bookId], references: [id], onDelete: Cascade)\n\n  @@index([orderId])\n  @@index([bookId])\n  @@map(\"book_order_items\")\n}\n\n// Purchase Model - User's purchased books (Access Control)\nmodel BookPurchase {\n  id            Int      @id @default(autoincrement())\n  userId        Int\n  bookId        Int\n  orderId       Int\n  purchaseDate  DateTime @default(now())\n  accessGranted Boolean  @default(true)\n\n  user  User      @relation(fields: [userId], references: [id], onDelete: Cascade)\n  book  Book      @relation(fields: [bookId], references: [id], onDelete: Cascade)\n  order BookOrder @relation(fields: [orderId], references: [id], onDelete: Cascade)\n\n  @@unique([userId, bookId])\n  @@index([userId])\n  @@index([bookId])\n  @@index([accessGranted])\n  @@map(\"book_purchases\")\n}\n\n//////////////////////////////\n// PAYMENT LOGS\n//////////////////////////////\n\nmodel Payment {\n  id          Int      @id @default(autoincrement())\n  userId      Int\n  referenceId String\n  provider    String\n  amount      Float\n  status      String\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id])\n}\n\n//////////////////////////////\n// NEWS\n//////////////////////////////\n\nmodel News {\n  id        Int      @id @default(autoincrement())\n  title     String\n  titleEn   String\n  slug      String   @unique\n  excerpt   String\n  image     String\n  category  String\n  date      String\n  readTime  String\n  views     Int      @default(0)\n  featured  Boolean  @default(false)\n  content   Json\n  tags      Json\n  author    String\n  authorId  Int?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([category])\n  @@index([featured])\n  @@index([slug])\n}\n\n//////////////////////////////\n// GOPAL PARIWAR\n//////////////////////////////\n\nmodel GopalPariwar {\n  id                 Int      @id @default(autoincrement())\n  heroImage          String\n  heroTitle          String\n  heroSubtitle       String\n  personalInfo       Json\n  spiritualEducation String?\n  lifeJourney        Json\n  responsibilities   Json\n  pledges            Json\n  createdAt          DateTime @default(now())\n  updatedAt          DateTime @updatedAt\n}\n\n//////////////////////////////\n// GAUSHALA\n//////////////////////////////\n\nmodel Gaushala {\n  id                Int      @id @default(autoincrement())\n  name              String\n  photo             String?\n  address           String\n  establishmentYear Int\n  contactDetails    String\n  totalCows         Int\n  capacity          Int\n  description       String?\n  city              String\n  state             String\n  pincode           String\n  contactPerson     String\n  createdAt         DateTime @default(now())\n  updatedAt         DateTime @updatedAt\n}\n\n//////////////////////////////\n// CARDS\n//////////////////////////////\n\nmodel Card {\n  id        Int      @id @default(autoincrement())\n  title     String // Hindi title\n  titleEn   String? // English title\n  link      String // URL or internal link\n  image     String? // Optional image for the card\n  order     Int?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\n//////////////////////////////\n// DATA SANSTHAN / ORGANIZATION\n//////////////////////////////\n\nmodel DtaSanssthan {\n  id          Int      @id @default(autoincrement())\n  name        String\n  person      String?\n  image       String? // optional logo or representative image\n  description String?\n  email       String?\n  phone       String?\n  altPhone    String?\n  website     String?\n  timing      String? // working hours / schedule\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n}\n\n//////////////////////////////\n// PRIVACY POLICY\n//////////////////////////////\n\nmodel PrivacyPolicy {\n  id             Int      @id @default(autoincrement())\n  title          String\n  subtitle       String?\n  sections       Json // Array of sections { title: String, content: String }\n  email          String?\n  phone          String?\n  callingHours   String? // e.g., \"10:00 AM - 6:00 PM\"\n  mailingAddress String?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n}\n\n//////////////////////////////\n// TERMS AND CONDITIONS\n//////////////////////////////\n\nmodel TermsConditions {\n  id             Int      @id @default(autoincrement())\n  title          String\n  subtitle       String?\n  sections       Json // Array of sections { title: String, content: String }\n  email          String?\n  phone          String?\n  callingHours   String? // e.g., \"10:00 AM - 6:00 PM\"\n  mailingAddress String?\n  createdAt      DateTime @default(now())\n  updatedAt      DateTime @updatedAt\n}\n\n//////////////////////////////\n// BANNERS\n//////////////////////////////\n\nmodel Banner {\n  id       Int     @id @default(autoincrement())\n  title    String\n  image    String\n  active   Boolean @default(false)\n  order    Int\n  publicId String\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n}\n\nmodel Message {\n  id        Int      @id @default(autoincrement())\n  info      String\n  createdAt DateTime @default(now())\n}\n\nmodel Foundation {\n  id              Int      @id @default(autoincrement())\n  name            String\n  tagline         String?\n  logoUrl         String?  @map(\"logo_url\")\n  description     String?  @db.Text\n  establishedYear String?  @map(\"established_year\")\n  isActive        Boolean  @default(true) @map(\"is_active\")\n  createdAt       DateTime @default(now()) @map(\"created_at\")\n  updatedAt       DateTime @updatedAt @map(\"updated_at\")\n  createdById     Int?     @map(\"created_by_id\")\n  updatedById     Int?     @map(\"updated_by_id\")\n\n  stats      FoundationStat[]\n  activities FoundationActivity[]\n  objectives FoundationObjective[]\n  contact    FoundationContact?\n  media      FoundationMedia[]\n\n  @@map(\"foundations\")\n}\n\nmodel FoundationStat {\n  id           Int      @id @default(autoincrement())\n  foundationId Int      @map(\"foundation_id\")\n  label        String\n  value        String\n  displayOrder Int      @default(0) @map(\"display_order\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  foundation Foundation @relation(fields: [foundationId], references: [id], onDelete: Cascade)\n\n  @@map(\"foundation_stats\")\n}\n\nmodel FoundationActivity {\n  id           Int      @id @default(autoincrement())\n  foundationId Int      @map(\"foundation_id\")\n  activityText String   @map(\"activity_text\") @db.Text\n  displayOrder Int      @default(0) @map(\"display_order\")\n  createdAt    DateTime @default(now()) @map(\"created_at\")\n  updatedAt    DateTime @updatedAt @map(\"updated_at\")\n\n  foundation Foundation @relation(fields: [foundationId], references: [id], onDelete: Cascade)\n\n  @@map(\"foundation_activities\")\n}\n\nenum ObjectiveType {\n  main\n  supportive\n}\n\nmodel FoundationObjective {\n  id            Int           @id @default(autoincrement())\n  foundationId  Int           @map(\"foundation_id\")\n  title         String\n  description   String?       @db.Text\n  objectiveType ObjectiveType @default(main) @map(\"objective_type\")\n  displayOrder  Int           @default(0) @map(\"display_order\")\n  createdAt     DateTime      @default(now()) @map(\"created_at\")\n  updatedAt     DateTime      @updatedAt @map(\"updated_at\")\n\n  foundation Foundation @relation(fields: [foundationId], references: [id], onDelete: Cascade)\n\n  @@map(\"foundation_objectives\")\n}\n\nmodel FoundationContact {\n  id               Int      @id @default(autoincrement())\n  foundationId     Int      @unique @map(\"foundation_id\")\n  email            String?\n  phone            String?\n  address          String?  @db.Text\n  website          String?\n  socialMediaLinks Json?    @map(\"social_media_links\")\n  createdAt        DateTime @default(now()) @map(\"created_at\")\n  updatedAt        DateTime @updatedAt @map(\"updated_at\")\n\n  foundation Foundation @relation(fields: [foundationId], references: [id], onDelete: Cascade)\n\n  @@map(\"foundation_contacts\")\n}\n\nenum UserRole {\n  super_admin\n  admin\n  editor\n}\n\nenum MediaType {\n  logo\n  banner\n  gallery\n  document\n}\n\nmodel FoundationMedia {\n  id           Int       @id @default(autoincrement())\n  foundationId Int?      @map(\"foundation_id\")\n  fileName     String    @map(\"file_name\")\n  filePath     String    @map(\"file_path\")\n  fileType     String?   @map(\"file_type\")\n  fileSize     Int?      @map(\"file_size\")\n  mediaType    MediaType @default(gallery) @map(\"media_type\")\n  altText      String?   @map(\"alt_text\")\n  createdAt    DateTime  @default(now()) @map(\"created_at\")\n\n  foundation Foundation? @relation(fields: [foundationId], references: [id], onDelete: Cascade)\n\n  @@map(\"foundation_media\")\n}\n\nmodel Event {\n  id          Int      @id @default(autoincrement())\n  title       String\n  startDate   DateTime\n  endDate     DateTime\n  time        String?\n  location    String\n  duration    String // e.g., \"5 दिवसीय\", \"1 दिवसीय\"\n  color       String   @default(\"from-orange-500 to-red-500\")\n  liveLinks   Json?\n  description String?  @db.Text\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@index([endDate])\n}\n\nmodel Bhajan {\n  id        String   @id @default(uuid())\n  name      String\n  artist    String\n  album     String?\n  duration  String   @default(\"0:00\")\n  imageUrl  String?\n  audioUrl  String\n  audioPath String // Server file path\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([name])\n  @@index([artist])\n}\n",
  "inlineSchemaHash": "cb6576a549d6695f0ccb3cc1b6d09ca6d3f2909b731698810074c7a64f18635d",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otpCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"otpExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"resetToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"resetTokenExpires\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"bookOrders\",\"kind\":\"object\",\"type\":\"BookOrder\",\"relationName\":\"BookOrderToUser\"},{\"name\":\"bookPurchases\",\"kind\":\"object\",\"type\":\"BookPurchase\",\"relationName\":\"BookPurchaseToUser\"},{\"name\":\"donations\",\"kind\":\"object\",\"type\":\"Donation\",\"relationName\":\"DonationToUser\"},{\"name\":\"payments\",\"kind\":\"object\",\"type\":\"Payment\",\"relationName\":\"PaymentToUser\"}],\"dbName\":null},\"Donation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"transactionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DonationToUser\"}],\"dbName\":null},\"Book\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"coverImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"uploadDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"purchases\",\"kind\":\"object\",\"type\":\"BookPurchase\",\"relationName\":\"BookToBookPurchase\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"BookOrderItem\",\"relationName\":\"BookToBookOrderItem\"}],\"dbName\":\"books\"},\"BookCoupon\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"BookOrder\",\"relationName\":\"BookCouponToBookOrder\"}],\"dbName\":\"book_coupons\"},\"BookOrder\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"finalAmount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"couponId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"paymentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookOrderToUser\"},{\"name\":\"coupon\",\"kind\":\"object\",\"type\":\"BookCoupon\",\"relationName\":\"BookCouponToBookOrder\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"BookOrderItem\",\"relationName\":\"BookOrderToBookOrderItem\"},{\"name\":\"purchases\",\"kind\":\"object\",\"type\":\"BookPurchase\",\"relationName\":\"BookOrderToBookPurchase\"}],\"dbName\":\"book_orders\"},\"BookOrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"BookOrder\",\"relationName\":\"BookOrderToBookOrderItem\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToBookOrderItem\"}],\"dbName\":\"book_order_items\"},\"BookPurchase\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"bookId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"purchaseDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"accessGranted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"BookPurchaseToUser\"},{\"name\":\"book\",\"kind\":\"object\",\"type\":\"Book\",\"relationName\":\"BookToBookPurchase\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"BookOrder\",\"relationName\":\"BookOrderToBookPurchase\"}],\"dbName\":\"book_purchases\"},\"Payment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"referenceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"provider\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"amount\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PaymentToUser\"}],\"dbName\":null},\"News\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"titleEn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"excerpt\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"readTime\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"views\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"author\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"authorId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"GopalPariwar\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"heroImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"heroTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"heroSubtitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"personalInfo\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"spiritualEducation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lifeJourney\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"responsibilities\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"pledges\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Gaushala\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"photo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"establishmentYear\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"contactDetails\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"totalCows\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"capacity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"pincode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contactPerson\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Card\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"titleEn\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"DtaSanssthan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"person\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"altPhone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timing\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"PrivacyPolicy\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sections\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"callingHours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"TermsConditions\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subtitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sections\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"callingHours\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mailingAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Banner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"active\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"publicId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"info\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Foundation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tagline\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"logo_url\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"establishedYear\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"established_year\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\",\"dbName\":\"is_active\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"created_by_id\"},{\"name\":\"updatedById\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"updated_by_id\"},{\"name\":\"stats\",\"kind\":\"object\",\"type\":\"FoundationStat\",\"relationName\":\"FoundationToFoundationStat\"},{\"name\":\"activities\",\"kind\":\"object\",\"type\":\"FoundationActivity\",\"relationName\":\"FoundationToFoundationActivity\"},{\"name\":\"objectives\",\"kind\":\"object\",\"type\":\"FoundationObjective\",\"relationName\":\"FoundationToFoundationObjective\"},{\"name\":\"contact\",\"kind\":\"object\",\"type\":\"FoundationContact\",\"relationName\":\"FoundationToFoundationContact\"},{\"name\":\"media\",\"kind\":\"object\",\"type\":\"FoundationMedia\",\"relationName\":\"FoundationToFoundationMedia\"}],\"dbName\":\"foundations\"},\"FoundationStat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foundationId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"foundation_id\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"display_order\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"foundation\",\"kind\":\"object\",\"type\":\"Foundation\",\"relationName\":\"FoundationToFoundationStat\"}],\"dbName\":\"foundation_stats\"},\"FoundationActivity\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foundationId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"foundation_id\"},{\"name\":\"activityText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"activity_text\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"display_order\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"foundation\",\"kind\":\"object\",\"type\":\"Foundation\",\"relationName\":\"FoundationToFoundationActivity\"}],\"dbName\":\"foundation_activities\"},\"FoundationObjective\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foundationId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"foundation_id\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"objectiveType\",\"kind\":\"enum\",\"type\":\"ObjectiveType\",\"dbName\":\"objective_type\"},{\"name\":\"displayOrder\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"display_order\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"foundation\",\"kind\":\"object\",\"type\":\"Foundation\",\"relationName\":\"FoundationToFoundationObjective\"}],\"dbName\":\"foundation_objectives\"},\"FoundationContact\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foundationId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"foundation_id\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"website\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"socialMediaLinks\",\"kind\":\"scalar\",\"type\":\"Json\",\"dbName\":\"social_media_links\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"updated_at\"},{\"name\":\"foundation\",\"kind\":\"object\",\"type\":\"Foundation\",\"relationName\":\"FoundationToFoundationContact\"}],\"dbName\":\"foundation_contacts\"},\"FoundationMedia\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"foundationId\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"foundation_id\"},{\"name\":\"fileName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_name\"},{\"name\":\"filePath\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_path\"},{\"name\":\"fileType\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"file_type\"},{\"name\":\"fileSize\",\"kind\":\"scalar\",\"type\":\"Int\",\"dbName\":\"file_size\"},{\"name\":\"mediaType\",\"kind\":\"enum\",\"type\":\"MediaType\",\"dbName\":\"media_type\"},{\"name\":\"altText\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"alt_text\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"created_at\"},{\"name\":\"foundation\",\"kind\":\"object\",\"type\":\"Foundation\",\"relationName\":\"FoundationToFoundationMedia\"}],\"dbName\":\"foundation_media\"},\"Event\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"time\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"liveLinks\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"Bhajan\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"artist\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"album\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audioUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"audioPath\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

