import nodemailer from 'nodemailer';

// Configure email transporter
const transporter = nodemailer.createTransport({
  host: process.env.SMTP_HOST,
  port: Number(process.env.SMTP_PORT) || 465,
  secure: Number(process.env.SMTP_PORT) === 465,
  auth: { user: process.env.SMTP_USER, pass: process.env.SMTP_PASS },
  tls: { rejectUnauthorized: false },
});

// Verify transporter on startup
transporter.verify((error, success) => {
  if (error) {
    console.error('тЭМ Email transporter verification failed:', error.message);
  } else {
    console.log('тЬЕ Gau Katha booking email server is ready');
  }
});

export const submitGauKathaBooking = async (req, res) => {
  try {
    const { name, contact, state, city,email } = req.body;

    // Validate required fields
    if (!name || !contact || !state || !city||!email) {
      return res.status(400).json({ 
        error: 'рд╕рднреА рдлрд╝реАрд▓реНрдб рдЖрд╡рд╢реНрдпрдХ рд╣реИрдВ / All fields are required',
        success: false 
      });
    }

    // Validate contact number (Indian format)
    const contactRegex = /^[6-9]\d{9}$/;
    if (!contactRegex.test(contact.replace(/\s/g, ''))) {
      return res.status(400).json({ 
        error: 'рдХреГрдкрдпрд╛ рд╕рд╣реА рдореЛрдмрд╛рдЗрд▓ рдирдВрдмрд░ рджрд░реНрдЬ рдХрд░реЗрдВ / Please enter a valid 10-digit mobile number',
        success: false 
      });
    }




    // Email to admin
    const adminMailOptions = {
      from: process.env.EMAIL_FROM,
      to: process.env.ADMIN_EMAIL,
      subject: `ЁЯЩП рдирдпрд╛ рдЧреМ рдХрдерд╛ рдмреБрдХрд┐рдВрдЧ - ${name} рд╕реЗ ${city}, ${state}`,
      html: `
        <div style="font-family: Arial, sans-serif; color: #333;">
          <h2>ЁЯРД Gau Katha Booking Request</h2>
          <p><strong>Name:</strong> ${name}</p>
          <p><strong>Contact:</strong> <a href="tel:+91${contact}">+91 ${contact}</a></p>
          <p><strong>State:</strong> ${state}</p>
          <p><strong>City/Village:</strong> ${city}</p>
          <p><strong>Submitted at:</strong> ${new Date().toLocaleString('hi-IN', { timeZone: 'Asia/Kolkata', dateStyle: 'full', timeStyle: 'long' })}</p>

          <p>Please contact the applicant to schedule the Gau Katha.</p>
        </div>
      `,
      text: `
ЁЯРД Gau Katha Booking Request

Name: ${name}
Contact: +91 ${contact}
State: ${state}
City/Village: ${city}
Email:${email}


Please contact the applicant to schedule the Gau Katha.
      `,
    };
   const userMailOptions = {
  from: process.env.EMAIL_FROM,
  to: email,
  subject: `ЁЯЩП рдзрдиреНрдпрд╡рд╛рдж ${name} рдЬреА - рдЖрдкрдХреА рдЧреМ рдХрдерд╛ рдмреБрдХрд┐рдВрдЧ рд╕рдлрд▓ рд░рд╣реА!`,
  html: `
    <div style="font-family: Arial, sans-serif; color: #333; background: #f9f9f9; padding: 20px; border-radius: 8px;">
      <h2 style="color: #4a7729;">ЁЯРД рдЬрдп рдЧреЛрдорд╛рддрд╛! рдЖрдкрдХреА рдЧреМ рдХрдерд╛ рдмреБрдХрд┐рдВрдЧ рд╕рдлрд▓ рд░рд╣реА</h2>
      <p>рдкреНрд░рд┐рдп <strong>${name}</strong> рдЬреА,</p>

      <p>рд╣рдордиреЗ рдЖрдкрдХреА <strong>рдЧреМ рдХрдерд╛ рдмреБрдХрд┐рдВрдЧ</strong> рдХрд╛ рдЕрдиреБрд░реЛрдз рдкреНрд░рд╛рдкреНрдд рдХрд░ рд▓рд┐рдпрд╛ рд╣реИред рд╣рдорд╛рд░реА рдЯреАрдо рд╢реАрдШреНрд░ рд╣реА рдЖрдкрд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдЧреА рдФрд░ рдЖрдЧреЗ рдХреА рдкреНрд░рдХреНрд░рд┐рдпрд╛ рдХреА рдЬрд╛рдирдХрд╛рд░реА рджреЗрдЧреАред</p>

      <hr style="border: 0; border-top: 1px solid #ccc; margin: 20px 0;" />

      <h3>ЁЯУЛ рдмреБрдХрд┐рдВрдЧ рд╡рд┐рд╡рд░рдг:</h3>
      <p><strong>рдирд╛рдо:</strong> ${name}</p>
      <p><strong>рд╕рдВрдкрд░реНрдХ:</strong> <a href="tel:+91${contact}" style="color: #4a7729;">+91 ${contact}</a></p>
      <p><strong>рд░рд╛рдЬреНрдп:</strong> ${state}</p>
      <p><strong>рд╢рд╣рд░ / рдЧрд╛рдВрд╡:</strong> ${city}</p>
      <p><strong>рдмреБрдХрд┐рдВрдЧ рд╕рдордп:</strong> ${new Date().toLocaleString('hi-IN', {
        timeZone: 'Asia/Kolkata',
        dateStyle: 'full',
        timeStyle: 'long',
      })}</p>

      <hr style="border: 0; border-top: 1px solid #ccc; margin: 20px 0;" />

      <p style="font-size: 15px;">
        ЁЯЩП рдЧреЛрд╕реЗрд╡рд╛ рд╕реЗ рдмрдврд╝рдХрд░ рдХреЛрдИ рд╕реЗрд╡рд╛ рдирд╣реАрдВред<br/>
        рд╣рдорд╛рд░реА рдЯреАрдо рдЬрд▓реНрдж рд╣реА рдЖрдкрдХреЗ рджреНрд╡рд╛рд░рд╛ рджрд┐рдП рдЧрдП рдирдВрдмрд░ рдкрд░ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдЧреАред
      </p>

      <p style="margin-top: 20px; color: #4a7729;">
        рд╕рд╛рджрд░,<br/>
        <strong>рдзреЗрдиреБ рдорд╣рд┐рдорд╛ рд╕реЗрд╡рд╛ рдЯреАрдо</strong>
      </p>
    </div>
  `,
  text: `
ЁЯРД рдЬрдп рдЧреЛрдорд╛рддрд╛! рдЖрдкрдХреА рдЧреМ рдХрдерд╛ рдмреБрдХрд┐рдВрдЧ рд╕рдлрд▓ рд░рд╣реА

рдкреНрд░рд┐рдп ${name} рдЬреА,

рд╣рдордиреЗ рдЖрдкрдХреА рдЧреМ рдХрдерд╛ рдмреБрдХрд┐рдВрдЧ рдХрд╛ рдЕрдиреБрд░реЛрдз рдкреНрд░рд╛рдкреНрдд рдХрд░ рд▓рд┐рдпрд╛ рд╣реИред
рд╣рдорд╛рд░реА рдЯреАрдо рд╢реАрдШреНрд░ рд╣реА рдЖрдкрд╕реЗ рд╕рдВрдкрд░реНрдХ рдХрд░реЗрдЧреАред

ЁЯУЛ рдмреБрдХрд┐рдВрдЧ рд╡рд┐рд╡рд░рдг:
рдирд╛рдо: ${name}
рд╕рдВрдкрд░реНрдХ: +91 ${contact}
рд░рд╛рдЬреНрдп: ${state}
рд╢рд╣рд░ / рдЧрд╛рдВрд╡: ${city}
рдмреБрдХрд┐рдВрдЧ рд╕рдордп: ${new Date().toLocaleString('hi-IN', { timeZone: 'Asia/Kolkata', dateStyle: 'full', timeStyle: 'long' })}

ЁЯЩП рдЧреЛрд╕реЗрд╡рд╛ рд╕реЗ рдмрдврд╝рдХрд░ рдХреЛрдИ рд╕реЗрд╡рд╛ рдирд╣реАрдВред
рд╕рд╛рджрд░,
рдзреЗрдиреБ рдорд╣рд┐рдорд╛ рд╕реЗрд╡рд╛ рдЯреАрдо
  `,
};



    await transporter.sendMail(adminMailOptions);
    await transporter.sendMail(userMailOptions);
    console.log('тЬЕ Admin email sent successfully');

    res.status(200).json({ 
      message: 'рдЖрдкрдХрд╛ рдЖрд╡реЗрджрди рд╕рдлрд▓рддрд╛рдкреВрд░реНрд╡рдХ рдЬрдорд╛ рд╣реЛ рдЧрдпрд╛ рд╣реИ! / Your booking request has been submitted successfully!',
      success: true,

    });

  } catch (error) {
    console.error('тЭМ Error submitting Gau Katha booking:', error);

    let errorMessage = 'рдЖрд╡реЗрджрди рдЬрдорд╛ рдХрд░рдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐ / Failed to submit booking request';

    if (error.code === 'EAUTH') {
      errorMessage = 'рдИрдореЗрд▓ рднреЗрдЬрдиреЗ рдореЗрдВ рддреНрд░реБрдЯрд┐ / Email sending failed';
    }

    res.status(500).json({ 
      error: errorMessage,
      success: false,
      details: process.env.NODE_ENV === 'development' ? error.message : undefined
    });
  }
};
